/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, Edges } from "@react-three/drei";
import modelPath from "../assets/atks.glb";

export default function Atkinson(props) {
	const group = useRef();
	const { nodes, materials } = useGLTF(modelPath);
	return (
		<group ref={group} {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes['Basic_Roof_Generic_-_12"_548495'].geometry}
				// material={nodes['Basic_Roof_Generic_-_12"_548495'].material}
				scale={0.0125}
				rotation={[0, 0, 0]}
			>
				<meshStandardMaterial
					attach="material"
					transparent={true}
					opacity={0.7}
					color={"#332FD0"}
				/>
				<Edges scale={1.002} threshold={15} color="#E15FED" />
			</mesh>
			// left stairs
			<mesh position={[-1.2, -0.6, -0.5]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[3, 0.1, 5]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[-1.35, -0.7, -0.4]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[3.25, 0.1, 5.25]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[-1.5, -0.8, -0.3]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[3.5, 0.1, 5.5]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[-1.65, -0.9, -0.2]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[3.75, 0.1, 5.75]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[-1.8, -1.2, -0.1]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[4, 0.5, 6]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			// right stairs
			<mesh position={[1.5, -0.6, 0.2]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[2.2, 0.1, 5]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[1.6, -0.7, 0.35]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[2.45, 0.1, 5.25]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[1.7, -0.8, 0.5]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[2.7, 0.1, 5.5]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[1.8, -0.9, 0.65]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[2.95, 0.1, 5.75]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
			<mesh position={[1.85, -1.2, 0.8]} rotation={[0, -0.24, 0]}>
				<boxGeometry args={[3.1, 0.5, 5.9]} />
				<meshStandardMaterial
					attach="material"
					// transparent={true}
					// opacity={0.8}
					color={"#c331bf"}
				/>
				{/* <Edges
					scale={1}
					threshold={15} 
					color="blue"
				/> */}
			</mesh>
		</group>
	);
}

useGLTF.preload(modelPath);
